name: Eletta - Build, Linting and Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.7"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Instalar depend√™ncias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Rodar teste de build (verificar inicializa√ß√£o da aplica√ß√£o)
        working-directory: App
        run: |
          echo "Iniciando verifica√ß√£o de build: tentando iniciar a aplica√ß√£o..."
          flet run Eletta.py
          echo "‚úÖ Aplica√ß√£o iniciada com sucesso. Build conclu√≠do sem erros!"

      - name: Run Black (checagem de formata√ß√£o)
        run: black --check App/

      - name: Run Ruff (checagem de lint)
        run: ruff check App/

      - name: Post comment on PR if linting or formatting fails
        if: failure() && github.event_name == 'pull_request'
        uses: mshick/add-pr-comment@v2
        with:
          message: |
            ‚ùå **Seu c√≥digo n√£o passou na formata√ß√£o ou linting!**

            Por favor, corrija os problemas antes de enviar novamente:

            - üñäÔ∏è **Formata√ß√£o:** `black .`
            - üîç **Linting:** `ruff check --fix .`

            Ap√≥s corrigir, fa√ßa:
            ```
            git add .
            git commit -m "Corrigindo lint"
            git push
            ```

      - name: Executar testes automatizados com cobertura de c√≥digo
        working-directory: App
        run: |
          echo "üîé Iniciando testes automatizados com coverage..."
          coverage run -m pytest
          coverage report -m
          echo "‚úÖ Testes conclu√≠dos e relat√≥rio de coverage gerado com sucesso!"
